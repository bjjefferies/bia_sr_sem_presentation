knitr::opts_chunk$set(echo = TRUE)
install.packages("xray")
install.packages("Rtools")
install.packages("rtools")
install.packages("rtools45")
install.packages("tidyverse")
library(tidyverse)
library(xray)
library(readr)
library(readxl)
library(here)
install.packages("here")
library(here)
list.files(path = here())
local_files <- list.files(path = here())
# restrict list of local files to those ending in .xlsx
local_files
# restrict list of local files to those ending in .xlsx
local_files <- local_files[grepl(pattern = ".xlsx$")]
# restrict list of local files to those ending in .xlsx
local_files <- local_files[grepl(pattern = ".xlsx$", x = local_files)]
dat <- readxl::read_xlsx(here(local_files))
#find local files
local_files <- list.files(path = here())
# restrict list of local files to those ending in .xlsx
local_files <- local_files[grepl(pattern = ".xlsx$", x = local_files)]
# read in to dat
dat <- readxl::read_xlsx(here(local_files))
head(dat)
knitr::opts_chunk$set(echo = TRUE)
xray::distributions(dat)
head(dat)
install.packages("janitor")
library(janitor)
dat <- janitor::clean_names(dat)
unique(dat$accept_date)
accept_date <- dat %>%
select(accept_date) %>%
mutate(accept_date = as.Date.POSIXct(accept_date))
library(tidyverse)
library(xray)
library(readr)
library(readxl)
library(here)
library(janitor)
accept_date <- dat %>%
select(accept_date) %>%
mutate(accept_date = as.Date.POSIXct(accept_date))
head(accept_date)
accept_date <- dat %>%
select(accept_date) %>%
mutate(accept_date = as.Date.POSIXct('1900-01-01' + accept_date))
accept_date <- dat %>%
select(accept_date) %>%
mutate(accept_date = as.Date(accept_date, origin = "1899-12-30"))
head(accept_date)
dat <- dat %>%
mutate(accept_date = as.Date(accept_date, origin = "1899-12-30"))
head(accept_date)
head(dat)
xray::distributions(dat)
```{r warning=FALSE}
xray::distributions(dat)
dat <- dat %>%
mutate(accept_time_elapsed = accept_date - admit_date)
dat <- dat %>%
mutate(accept_time_elapsed = accept_date - as.Date(admit_date))
head(dat)
View(dat)
rm(accept_date)
dat <- dat %>%
mutate(accept_time_elapsed = as.numeric(accept_date - as.Date(admit_date)))
dat %>%
summarize(avg_accept_time = mean(accept_time_elapsed, na.rm = t))
dat %>%
summarize(avg_accept_time = mean(accept_time_elapsed, na.rm = T))
dat %>%
group_by(residency) %>%
summarize(avg_accept_time = mean(accept_time_elapsed, na.rm = T))
dat %>%
group_by(residency, ipeds_ethnicity) %>%
summarize(avg_accept_time = mean(accept_time_elapsed, na.rm = T))
attach(dat)
lm_aid_accept_time <- lm(formula = dat$accept_time_elapsed ~ dat$offered_aid_amount,
data = dat,
subset = !is.na(dat$accept_date))
summary(lm_aid_accept_time)
dettach(dat)
detach(dat)
summary(lm_aid_accept_time)
lm_aid_accept_time$coefficients
lm_aid_accept_time$coefficients[2]
lm_aid_accept_time$coefficients[2] * 1000
dat_accepted <- dat[ !is.na(dat$accept_date), ]
plot(x = dat_accepted$accept_time_elapsed, y = dat_accepted$offered_aid_amount)
dat %>%
filter(accept_time_elapsed <= 0)
# convert all NA's in offered aid to $0
dat <- dat %>%
mutate(offered_aid_amount = ifelse(is.na(offered_aid_amount), 0, offered_aid_amount))
# convert all NA's in offered aid to $0
dat <- dat %>%
mutate(offered_aid_amount = round( ifelse(is.na(offered_aid_amount), 0, offered_aid_amount), 0))
lm_aid_accept_time <- lm(formula = dat$accept_time_elapsed ~ dat$offered_aid_amount,
data = dat,
subset = !is.na(dat$accept_date))
summary(lm_aid_accept_time)
lm_aid_accept_time$coefficients[2] * 1000
dat_accepted <- dat[ !is.na(dat$accept_date), ]
plot(x = dat_accepted$accept_time_elapsed, y = dat_accepted$offered_aid_amount)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(xray)
library(readr)
library(readxl)
library(here)
library(janitor)
dat %>%
summarise(total_apps = nrow(dat),
total_admit = sum(admit, na.rm = T))
dat %>%
summarise(total_admit = sum(admit, na.rm = T),
total_accept = sum(accept, na.rm = T))
dat %>%
summarise(total_admit = sum(admit, na.rm = T),
total_accept = sum(accept, na.rm = T),
total_enroll = sum(enroll, na.rm = T))
dat %>%
summarise(total_admit = sum(admit, na.rm = T),
total_accept = sum(accept, na.rm = T),
total_enroll = sum(enroll, na.rm = T),
total_retain = sum(retain, na.rm = T))
dat %>%
group_by(gender) %>%
summarise(total_admit = sum(admit, na.rm = T),
total_accept = sum(accept, na.rm = T),
total_enroll = sum(enroll, na.rm = T),
total_retain = sum(retain, na.rm = T))
dat %>%
group_by(gender) %>%
summarise(total_admit = sum(admit, na.rm = T),
total_accept = sum(accept, na.rm = T),
pct_accept = sum(accept, na.rm = T) / sum(admit, na.rm = T),
total_enroll = sum(enroll, na.rm = T),
total_retain = sum(retain, na.rm = T))
dat %>%
group_by(gender) %>%
summarise(total_admit = sum(admit, na.rm = T),
total_accept = sum(accept, na.rm = T),
pct_accept = round( sum(accept, na.rm = T) / sum(admit, na.rm = T), 2),
total_enroll = sum(enroll, na.rm = T),
total_retain = sum(retain, na.rm = T))
dat %>%
group_by(gender) %>%
summarise(total_admit = sum(admit, na.rm = T),
total_accept = sum(accept, na.rm = T),
pct_accept = round( sum(accept, na.rm = T) / sum(admit, na.rm = T), 2),
total_enroll = sum(enroll, na.rm = T),
pct_enroll = round( sum(enroll, na.rm = T) / sum(accept, na.rm = T), 2),
total_retain = sum(retain, na.rm = T))
dat %>%
group_by(gender) %>%
summarise(total_admit = sum(admit, na.rm = T),
total_accept = sum(accept, na.rm = T),
pct_accept = round( sum(accept, na.rm = T) / sum(admit, na.rm = T), 2),
total_enroll = sum(enroll, na.rm = T),
pct_enroll = round( sum(enroll, na.rm = T) / sum(accept, na.rm = T), 2),
total_retain = sum(retain, na.rm = T),
pct_enroll = round( sum(retain, na.rm = T) / sum(enroll, na.rm = T), 2),)
dat %>%
group_by(gender) %>%
summarise(total_admit = sum(admit, na.rm = T),
total_accept = sum(accept, na.rm = T),
pct_accept = round( sum(accept, na.rm = T) / sum(admit, na.rm = T), 2),
total_enroll = sum(enroll, na.rm = T),
pct_enroll = round( sum(enroll, na.rm = T) / sum(accept, na.rm = T), 2),
total_retain = sum(retain, na.rm = T),
pct_enroll = round( sum(retain, na.rm = T) / sum(enroll, na.rm = T), 2))
dat %>%
group_by(gender) %>%
summarise(total_admit = sum(admit, na.rm = T),
total_accept = sum(accept, na.rm = T),
pct_accept = round( sum(accept, na.rm = T) / sum(admit, na.rm = T), 2),
total_enroll = sum(enroll, na.rm = T),
pct_enroll = round( sum(enroll, na.rm = T) / sum(accept, na.rm = T), 2),
total_retain = sum(retain, na.rm = T),
pct_retain = round( sum(retain, na.rm = T) / sum(enroll, na.rm = T), 2))
dat %>%
group_by(ipeds_ethnicity) %>%
summarise(total_admit = sum(admit, na.rm = T),
total_accept = sum(accept, na.rm = T),
pct_accept = round( sum(accept, na.rm = T) / sum(admit, na.rm = T), 2),
total_enroll = sum(enroll, na.rm = T),
pct_enroll = round( sum(enroll, na.rm = T) / sum(accept, na.rm = T), 2),
total_retain = sum(retain, na.rm = T),
pct_retain = round( sum(retain, na.rm = T) / sum(enroll, na.rm = T), 2))
dat %>%
group_by(ist_generation_student) %>%
summarise(total_admit = sum(admit, na.rm = T),
total_accept = sum(accept, na.rm = T),
pct_accept = round( sum(accept, na.rm = T) / sum(admit, na.rm = T), 2),
total_enroll = sum(enroll, na.rm = T),
pct_enroll = round( sum(enroll, na.rm = T) / sum(accept, na.rm = T), 2),
total_retain = sum(retain, na.rm = T),
pct_retain = round( sum(retain, na.rm = T) / sum(enroll, na.rm = T), 2))
dat %>%
group_by(ipeds_ethnicity) %>%
summarize(pct_indigenous = sum(enroll) / nrow(dat$enroll))
dat %>%
group_by(ipeds_ethnicity) %>%
summarize(pct_ = sum(enroll, na.rm = T))
dat %>%
group_by(ipeds_ethnicity) %>%
summarize(n = sum(enroll, na.rm = T))
dat %>%
group_by(ipeds_ethnicity) %>%
summarize(n = sum(enroll, na.rm = T)) %>%
mutate(pct = n / sum(n))
dat %>%
group_by(ipeds_ethnicity) %>%
summarize(n = sum(enroll, na.rm = T)) %>%
mutate(pct = round( n / sum(n), 2))
dat %>%
group_by(ipeds_ethnicity) %>%
summarize(enroll = sum(enroll, na.rm = T),
retain = sum(retain, na.rm = T)) %>%
mutate(pct_enroll = round( enroll / sum(enroll), 2),
pct_retain = round( retain / sum(retain), 2)) %>%
select(ipeds_ethnicity, enroll, pct_enroll, retain, pct_retain)
dat %>%
group_by(ipeds_ethnicity) %>%
summarize(enroll = sum(enroll, na.rm = T),
retain = sum(retain, na.rm = T)) %>%
mutate(pct_enroll = round( enroll / sum(enroll), 4),
pct_retain = round( retain / sum(retain), 4)) %>%
select(ipeds_ethnicity, enroll, pct_enroll, retain, pct_retain)
dat %>%
group_by(ipeds_ethnicity) %>%
summarize(admit = sum(admit, na.rm = T),
accept = sum(accept, na.rm = T)) %>%
mutate(pct_admit = round( admit / sum(admit), 4),
pct_accept = round( accept / sum(accept), 4)) %>%
select(ipeds_ethnicity, admit, pct_admit, accept, pct_accept)
# explore contributing factors to acceptance with logistic regression
m_log_accept <- glm(accept ~ offered_aid_amount,
data = dat,
family = binomial)
summary(m_log_accept)
m_log_accept$coefficients
m_log_accept$coefficients[2]
exp(m_log_accept$coefficients[2])
# convert log-odds to probability
exp(m_log_accept$coefficients[2]) / (1 + exp(m_log_accept$coefficients[2]))
exp(m_log_accept$coefficients)
# convert log-odds to odds-ratio
oddsRatio <- exp(m_log_accept$coefficients)
oddsRatio
# convert log-odds to odds-ratio
oddsRatio <- exp(m_log_accept$coefficients[2])
# convert odds ratio to units per $1000 of financial aid
oddsRatio <- oddsRatio^1000
oddsRatio
m_log_accept_controls <- glm(accept ~ accept ~ offered_aid_amount + factor(ipeds_ethnicity),
data = dat,
family = binomial)
m_log_accept_controls <- glm(accept ~ offered_aid_amount + factor(ipeds_ethnicity),
data = dat,
family = binomial)
summary(m_log_accept_controls)
m_log_accept_controls$coefficients
m_log_accept_controls$coefficients[2]
sum( m_log_accept_controls$coefficients[c(2,5)]
sum( m_log_accept_controls$coefficients[c(2,5)])
m_log_accept_controls$coefficients[2]
m_log_accept_controls$coefficients[5]
unique(dat$ipeds_ethnicity)
log_odds_indig <- m_log_accept_controls$coefficients[2] + m_log_accept_controls$coefficients[1]
odds_ratio_indig <- exp(log_odds_indig)
log_odds_indig
odds_ratio_indig
odds_ratio_indig <- (exp(log_odds_indig))^1000
odd_ratio_indig
odds_ratio_indig <- (exp(log_odds_indig))^1000
odd_ratio_indig
# Indigenous is the reference group, so add the intercept to the coefficient for offered aid
log_odds_indig <- m_log_accept_controls$coefficients[2] + m_log_accept_controls$coefficients[1]
log_odds_indig
odds_ratio_indig <- exp(log_odds_indig)
odds_ratio_indig
odds_ratio_indig <- odds_ratio_indig^1000
odds_ratio_indig
# Indigenous is the reference group, so add the intercept to the coefficient for offered aid
log_odds_indig <- m_log_accept_controls$coefficients[2] + m_log_accept_controls$coefficients[1]
odds_ratio_indig <- exp(log_odds_indig)
0.329^1000
# convert ethnicity field to factor
dat <- dat %>%
mutate(ipeds_ethnicity = factor(ipeds_ethnicity))
levels(dat$ipeds_ethnicity)
# logistic regression model controlling for ethnicity
m_log_accept_controls <- glm(accept ~ offered_aid_amount * ipeds_ethnicity,
data = dat,
family = binomial)
summary(m_log_accept_controls)
# convert ethnicity field to factor
dat <- dat %>%
mutate(ipeds_ethnicity = factor(ipeds_ethnicity),
household_income = factor(household_income))
dat %>%
group_by(household_income) %>%
summarize(enroll = sum(enroll, na.rm = T),
retain = sum(retain, na.rm = T)) %>%
mutate(pct_enroll = round( enroll / sum(enroll), 4),
pct_retain = round( retain / sum(retain), 4)) %>%
select(household_income, enroll, pct_enroll, retain, pct_retain)
unique(dat$household_income)
# convert ethnicity, household income field to factor
dat <- dat %>%
mutate(ipeds_ethnicity = factor(ipeds_ethnicity),
household_income = factor(household_income,
levels = c(">= $150,000", "$125,000 - $149,999", ">= $120,000", "$100,000 - $124,999", "$80,000 - $119,999", "$75,000 - $99,999", "$65,000 - $79,999", "$50,000 - $74,999", "$50,000 - $64,999", "$35,000 - $49,999", "$25,000 - $49,999", "$20,000 - $34,999", "< $25,000", "< $20,000", NA)))
unique(dat$household_income)
dat %>%
group_by(household_income) %>%
summarize(enroll = sum(enroll, na.rm = T),
retain = sum(retain, na.rm = T)) %>%
mutate(pct_enroll = round( enroll / sum(enroll), 4),
pct_retain = round( retain / sum(retain), 4)) %>%
select(household_income, enroll, pct_enroll, retain, pct_retain)
